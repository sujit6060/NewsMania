{"version":3,"sources":["thunk/index.js","Component/NewsApp.js","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["getNews","createAsyncThunk","a","axios","get","response","data","results","NewsApp","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","React","useState","expanded","setExpanded","dispatch","useDispatch","news","useSelector","state","enews","useEffect","style","paddingTop","Container","fixed","length","map","ele","index","Accordion","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","id","ListItemAvatar","Avatar","alt","src","multimedia","url","Typography","sx","width","flexShrink","title","AccordionDetails","Box","flexGrow","Grid","container","item","xs","height","caption","subsection","byline","published_date","Link","href","underline","target","CssBaseline","position","bottom","left","right","elevation","BottomNavigation","showLabels","BottomNavigationAction","label","icon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","counterSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","action","push","payload","pending","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"+XAGaA,EAAUC,YAAiB,eAAD,sBAAiB,4BAAAC,EAAA,sEAC/BC,IAAMC,IAC3B,iGAFoD,cAChDC,EADgD,yBAI/CA,EAASC,KAAKC,SAJiC,4C,uBCwBzC,SAASC,IACtB,IAAMC,EAAOC,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,eACvBA,EAAMC,WAAWC,OADK,IAEzBC,QAASH,EAAMI,QAAQ,GACvBC,UAAW,SACXC,MAAON,EAAMO,QAAQC,KAAKC,eAE5B,EAAgCC,IAAMC,UAAS,GAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAKMC,EAAWC,cACXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,QAKhD,OAJAI,qBAAU,WACRN,EAAS1B,OACR,IAGD,gCACE,qBAAKiC,MAAO,CAAEC,WAAY,OAAQjB,UAAW,UAA7C,SACE,kDAEF,eAACkB,EAAA,EAAD,CAAWC,OAAK,EAACH,MAAO,CAAEC,WAAY,QAAtC,UACGN,EAAKS,OAAS,EACXT,EAAK,GAAGU,KAAI,SAACC,EAAKC,GAAN,OACV,qCACE,eAACC,EAAA,EAAD,CACEjB,SAAuB,WAAbA,EACVkB,UApBMC,EAoBiB,SApBP,SAACC,EAAOC,GACtCpB,IAAYoB,GAAaF,KAiBb,UAIE,eAACG,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZ,gBAAc,mBACdC,GAAG,kBAHL,UAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,kBACJC,IAAKb,EAAIc,WAAW,GAAGC,QAG3B,cAACC,EAAA,EAAD,CAAYC,GAAI,CAAEC,MAAO,OAAQC,WAAY,GAA7C,SACGnB,EAAIoB,WAGT,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,GAArB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAChD,QAAS,EAAzB,UACE,cAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzD,EAAD,UACE,qBACEwB,MAAO,CAAEwB,MAAO,OAAQU,OAAQ,QAChCf,IAAKb,EAAIc,WAAW,GAAGC,UAI7B,eAACS,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJjC,MAAO,CACLwB,MAAO,OACPU,OAAQ,QALZ,UAQE,cAACZ,EAAA,EAAD,UAAahB,EAAIc,WAAW,GAAGe,UAC/B,uBACA,eAACb,EAAA,EAAD,2BAA0BhB,EAAI8B,cAC9B,uBACA,eAACd,EAAA,EAAD,uBAAsBhB,EAAI+B,UAC1B,uBACA,eAACf,EAAA,EAAD,0BACehB,EAAIgC,kBAEnB,uBACA,cAACC,EAAA,EAAD,CACEC,KAAMlC,EAAIe,IACVoB,UAAU,QACVC,OAAO,SAHT,8CAYV,cAACC,EAAA,EAAD,OA9EO,IAACjC,KAiFZ,GAEJ,cAAChC,EAAA,EAAD,CACE6C,GAAI,CAAEqB,SAAU,QAASC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GACpDC,UAAW,EAFb,SAIE,cAACC,EAAA,EAAD,CAAkBC,YAAU,EAA5B,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,mBACNC,KAAM,cAAC,IAAD,gBCnHLC,MARf,WACE,OACE,mCACE,cAAC/E,EAAD,OCMSgF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCiBCQ,EAlBaC,YAAY,CACtCC,KAAM,UACNC,aANmB,CACnBxE,KAAM,IAMNyE,SAAU,GAEVC,cAAe,SAACC,GAEdA,EACGC,QAAQxG,EAAQyG,WAAW,SAAC3E,EAAO4E,GAElC5E,EAAMF,KAAK+E,KAAKD,EAAOE,YAExBJ,QAAQxG,EAAQ6G,SAAS,SAAC/E,EAAO4E,UAMxC,QCrBaI,EAAQC,YAAe,CAClCC,QAAS,CACPjF,MAAOkE,KCGXgB,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1B5B,K","file":"static/js/main.fb9dbcb6.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getNews = createAsyncThunk(\"news/getnews\", async () => {\r\n  const response = await axios.get(\r\n    \"https://api.nytimes.com/svc/topstories/v2/world.json?api-key=zwPWSlMYX5hmqNvBIFVFZkpwd1l9KTWQ\"\r\n  );\r\n  return response.data.results;\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport RestoreIcon from \"@mui/icons-material/Restore\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { getNews } from \"../thunk\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\n\r\nexport default function NewsApp() {\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const news = useSelector((state) => state.enews.news);\r\n  useEffect(() => {\r\n    dispatch(getNews());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ paddingTop: \"30px\", textAlign: \"center\" }}>\r\n        <h1>ARTICLES MANIA</h1>\r\n      </div>\r\n      <Container fixed style={{ paddingTop: \"50px\" }}>\r\n        {news.length > 0\r\n          ? news[0].map((ele, index) => (\r\n              <>\r\n                <Accordion\r\n                  expanded={expanded === \"panel1\"}\r\n                  onChange={handleChange(\"panel1\")}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt=\"Profile Picture\"\r\n                        src={ele.multimedia[0].url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <Typography sx={{ width: \"100%\", flexShrink: 0 }}>\r\n                      {ele.title}\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={8}>\r\n                          <Item>\r\n                            <img\r\n                              style={{ width: \"100%\", height: \"100%\" }}\r\n                              src={ele.multimedia[0].url}\r\n                            />\r\n                          </Item>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={4}\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                          }}\r\n                        >\r\n                          <Typography>{ele.multimedia[0].caption}</Typography>\r\n                          <br></br>\r\n                          <Typography>SubSection : {ele.subsection}</Typography>\r\n                          <br></br>\r\n                          <Typography>Author : {ele.byline}</Typography>\r\n                          <br></br>\r\n                          <Typography>\r\n                            PublishAt : {ele.published_date}\r\n                          </Typography>\r\n                          <br></br>\r\n                          <Link\r\n                            href={ele.url}\r\n                            underline=\"hover\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            Read full article..\r\n                          </Link>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n                <CssBaseline />\r\n              </>\r\n            ))\r\n          : \"\"}\r\n\r\n        <Paper\r\n          sx={{ position: \"fixed\", bottom: 0, left: 0, right: 0 }}\r\n          elevation={3}\r\n        >\r\n          <BottomNavigation showLabels>\r\n            <BottomNavigationAction\r\n              label=\"Recents Articles\"\r\n              icon={<RestoreIcon />}\r\n            />\r\n          </BottomNavigation>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport NewsApp from \"./Component/NewsApp\";\n\nfunction App() {\n  return (\n    <>\n      <NewsApp />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getNews } from \"../thunk\";\r\nconst initialState = {\r\n  news: [],\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {},\r\n\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder\r\n      .addCase(getNews.fulfilled, (state, action) => {\r\n        // Add user to the state array\r\n        state.news.push(action.payload);\r\n      })\r\n      .addCase(getNews.pending, (state, action) => {});\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterSlice from \"../reducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    enews: counterSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}